#!/bin/bash

# Run unit tests automatically with a pre-commit hook.
# ---
# This file will be run by git on commit (name as pre-commit, no extension),
# and will finish the commit once the tests run successfully.
#
# (See https://blog.devgenius.io/automate-unit-tests-before-each-commit-by-git-hook-f331f0499786)
#
#(old) docker-compose exec -T static_build lerna run test --stream


# Use -T because it's running inside a script, so don't attach extra terminal

printMsg() {
    MSG=' before commit...'
    echo -e "${RUN_MSG}${MSG}\n"
}

RUN_MSG="Running javascript tests"
printMsg
docker-compose exec -T static_build grunt test --stream

RUN_MSG="Running python tests"
printMsg
docker-compose exec -T web ./manage.py test --settings=sk.settings.test

RUN_MSG="Running Django System Checks"
printMsg
docker-compose exec -T web ./manage.py check --settings=sk.settings.test

RUN_MSG="Running Linting"
printMsg
docker-compose exec -T web flake8

RUN_MSG="Running migrations check"
printMsg
docker-compose exec -T web ./manage.py makemigrations --check --dry-run

if [ $? -ne 0 ]; then
    echo "Tests must pass before commit. Please fix and commit again."

    exit 1 # Fail commit on non-zero exit code
fi
